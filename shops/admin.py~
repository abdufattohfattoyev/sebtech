from django.contrib import admin
from django.utils.html import format_html
from django import forms
from .models import Shop, Customer
from sales.models import PhoneSale, AccessorySale, PhoneExchange, Debt
from django.db import models


# Date widget for date fields
class DateInput(forms.DateInput):
    input_type = 'date'


@admin.register(Shop)
class ShopAdmin(admin.ModelAdmin):
    list_display = ("name", "owner", "created_at")
    search_fields = ("name", "owner__username")
    list_filter = ("created_at",)
    readonly_fields = ("created_at",)

    def get_queryset(self, request):
        return super().get_queryset(request).select_related('owner')


@admin.register(Customer)
class CustomerAdmin(admin.ModelAdmin):
    list_display = (
        "name",
        "phone_number",
        "total_debt_display",
        "total_purchases_display",
        "active_debts_count_display",
        "total_paid_amount_display",
        "created_at",
    )
    list_filter = ("created_at",)
    search_fields = ("name", "phone_number")
    readonly_fields = ("created_at",)

    fieldsets = (
        ('Asosiy ma\'lumotlar', {
            'fields': ('name', 'phone_number', 'image', 'notes')
        }),
        ('Qoshimcha ma\'lumotlar', {
            'fields': ('created_by', 'created_at'),
            'classes': ('collapse',)
        }),
    )

    formfield_overrides = {
        models.DateField: {'widget': DateInput},
    }

    def total_debt_display(self, obj):
        debt = obj.total_debt
        if debt > 0:
            return format_html('<span style="color: red;">${}</span>', "{:.2f}".format(debt))
        return "$0.00"

    total_debt_display.short_description = "Qarzi"

    def total_purchases_display(self, obj):
        total = obj.total_purchases
        return format_html('<span style="color: blue;">${}</span>', "{:.2f}".format(total))

    total_purchases_display.short_description = "Xaridlar"

    def active_debts_count_display(self, obj):
        count = obj.active_debts_count
        return format_html('<span style="color: orange;">{}</span>', count)

    active_debts_count_display.short_description = "Faol qarzlar"

    def total_paid_amount_display(self, obj):
        total = obj.total_paid_amount
        return format_html('<span style="color: green;">${}</span>', "{:.2f}".format(total))

    total_paid_amount_display.short_description = "To'langan"

    def get_queryset(self, request):
        return super().get_queryset(request).select_related('created_by').prefetch_related(
            'debts', 'phone_sales', 'accessory_sales', 'phone_exchanges'
        )

    class PhoneSaleInline(admin.TabularInline):
        model = PhoneSale
        extra = 0
        fields = (
            'phone', 'sale_price', 'cash_amount', 'card_amount',
            'credit_amount', 'debt_amount', 'salesman', 'sale_date'
        )
        readonly_fields = ('sale_price', 'cash_amount', 'card_amount', 'credit_amount', 'debt_amount', 'sale_date')
        show_change_link = True

    class AccessorySaleInline(admin.TabularInline):
        model = AccessorySale
        extra = 0
        fields = (
            'accessory', 'quantity', 'total_price', 'cash_amount',
            'card_amount', 'credit_amount', 'debt_amount', 'salesman', 'sale_date'
        )
        readonly_fields = ('total_price', 'cash_amount', 'card_amount', 'credit_amount', 'debt_amount', 'sale_date')
        show_change_link = True

    class PhoneExchangeInline(admin.TabularInline):
        model = PhoneExchange
        extra = 0
        fields = (
            'new_phone', 'old_phone_model', 'old_phone_memory', 'new_phone_price',
            'cash_amount', 'card_amount', 'credit_amount', 'debt_amount', 'salesman', 'exchange_date'
        )
        readonly_fields = (
            'new_phone_price', 'cash_amount', 'card_amount', 'credit_amount', 'debt_amount', 'exchange_date'
        )
        show_change_link = True

    class DebtInline(admin.TabularInline):
        model = Debt
        extra = 0
        fields = ('debt_type', 'creditor', 'debt_amount', 'paid_amount', 'due_date', 'status')
        readonly_fields = ('debt_amount', 'paid_amount', 'due_date', 'status')
        show_change_link = True

    inlines = [PhoneSaleInline, AccessorySaleInline, PhoneExchangeInline, DebtInline]