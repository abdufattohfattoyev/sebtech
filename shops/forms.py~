from django import forms
from .models import Shop, Customer
from users.models import UserProfile


class ShopForm(forms.ModelForm):
    class Meta:
        model = Shop
        fields = ['name', 'owner']
        labels = {
            'name': "Do'kon nomi",
            'owner': "Do'kon egasi",
        }
        widgets = {
            'name': forms.TextInput(attrs={'class': 'form-control', 'placeholder': "Do'kon nomini kiriting"}),
            'owner': forms.Select(attrs={'class': 'form-select'}),
        }

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)
        self.fields['owner'].queryset = UserProfile.objects.filter(role='boss').select_related('user')


class CustomerForm(forms.ModelForm):
    class Meta:
        model = Customer
        fields = ['name', 'phone_number', 'birth_date', 'image', 'notes']
        labels = {
            'name': "Mijoz ismi",
            'phone_number': "Telefon raqami",
            'birth_date': "Tug'ilgan kuni",
            'image': "Mijoz rasmi",
            'notes': "Izohlar",
        }
        widgets = {
            'name': forms.TextInput(attrs={
                'class': 'form-control',
                'placeholder': "Mijoz ismini kiriting"
            }),
            'phone_number': forms.TextInput(attrs={
                'class': 'form-control',
                'placeholder': "+998 XX XXX XX XX"
            }),
            'birth_date': forms.DateInput(attrs={
                'class': 'form-control',
                'type': 'date'
            }),
            'image': forms.FileInput(attrs={
                'class': 'form-control'
            }),
            'notes': forms.Textarea(attrs={
                'class': 'form-control',
                'rows': 4,
                'placeholder': "Izohlar (ixtiyoriy)"
            }),
        }

    def clean_phone_number(self):
        phone = self.cleaned_data.get('phone_number')
        if phone:
            # Faqat raqamlarni olib tashlash
            cleaned_phone = ''.join(filter(str.isdigit, phone))

            # Formatni tekshirish
            if not cleaned_phone.startswith('998') or len(cleaned_phone) != 12:
                raise forms.ValidationError(
                    "Telefon raqami 998 bilan boshlanishi va 12 raqamdan iborat bo'lishi kerak! "
                    "Masalan: 998901234567"
                )

            # Formatlash (bo'sh joysiz)
            return f"+{cleaned_phone}"
        return phone

    def clean_birth_date(self):
        birth_date = self.cleaned_data.get('birth_date')
        if birth_date:
            from django.utils import timezone
            if birth_date > timezone.now().date():
                raise forms.ValidationError("Tug'ilgan kun kelajakdagi sana bo'lishi mumkin emas!")
        return birth_date
