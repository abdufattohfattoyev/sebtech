from django import forms
from .models import Shop, Customer
from users.models import UserProfile


class ShopForm(forms.ModelForm):
    class Meta:
        model = Shop
        fields = ['name', 'owner']
        labels = {
            'name': "Do'kon nomi",
            'owner': "Do'kon egasi",
        }
        widgets = {
            'name': forms.TextInput(attrs={'class': 'form-control', 'placeholder': "Do'kon nomini kiriting"}),
            'owner': forms.Select(attrs={'class': 'form-select'}),
        }

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)
        self.fields['owner'].queryset = UserProfile.objects.filter(role='boss').select_related('user')


class Customer(models.Model):
    name = models.CharField(max_length=100, verbose_name="Mijoz ismi")
    phone_number = models.CharField(
        max_length=15,
        unique=True,
        verbose_name="Telefon raqami"
    )
    image = models.ImageField(upload_to='customers/', blank=True, null=True, verbose_name="Mijoz rasmi")
    notes = models.TextField(null=True, blank=True, verbose_name="Izohlar")
    created_at = models.DateField(default=timezone.now, verbose_name="Qo'shilgan sana")
    created_by = models.ForeignKey(
        User,
        on_delete=models.SET_NULL,
        null=True,
        blank=True,
        verbose_name="Qo'shgan foydalanuvchi"
    )

    class Meta:
        verbose_name = "Mijoz"
        verbose_name_plural = "Mijozlar"

    def __str__(self):
        return f"{self.name} - {self.phone_number}"

    @property
    def total_debt_usd(self):
        """Mijozning dollar qarzini hisoblash"""
        from sales.models import Debt
        active_debts = Debt.objects.filter(
            customer=self,
            status='active',
            currency='USD'
        ).aggregate(
            total_debt=Sum('debt_amount'),
            total_paid=Sum('paid_amount')
        )
        total_debt = active_debts['total_debt'] or Decimal('0')
        total_paid = active_debts['total_paid'] or Decimal('0')
        return max(Decimal('0'), total_debt - total_paid)

    @property
    def total_debt_uzs(self):
        """Mijozning so'm qarzini hisoblash"""
        from sales.models import Debt
        active_debts = Debt.objects.filter(
            customer=self,
            status='active',
            currency='UZS'
        ).aggregate(
            total_debt=Sum('debt_amount'),
            total_paid=Sum('paid_amount')
        )
        total_debt = active_debts['total_debt'] or Decimal('0')
        total_paid = active_debts['total_paid'] or Decimal('0')
        return max(Decimal('0'), total_debt - total_paid)

    @property
    def total_purchases_usd(self):
        """Mijozning dollar xaridlarini hisoblash"""
        from sales.models import PhoneSale, PhoneExchange
        phone_sales = self.phone_sales.aggregate(total=Sum('sale_price'))['total'] or Decimal('0')
        phone_exchanges = self.phone_exchanges.aggregate(total=Sum('new_phone_price'))['total'] or Decimal('0')
        return phone_sales + phone_exchanges

    @property
    def total_purchases_uzs(self):
        """Mijozning so'm xaridlarini hisoblash"""
        from sales.models import AccessorySale
        accessory_sales = self.accessory_sales.aggregate(total=Sum('total_price'))['total'] or Decimal('0')
        return accessory_sales

    @property
    def active_debts_count(self):
        """Faol qarzlar soni"""
        from sales.models import Debt
        return Debt.objects.filter(customer=self, status='active').count()

    @property
    def total_paid_amount_usd(self):
        """Umumiy to'langan dollar summa"""
        from sales.models import Debt
        return Debt.objects.filter(customer=self, currency='USD').aggregate(total=Sum('paid_amount'))[
            'total'] or Decimal('0')

    @property
    def total_paid_amount_uzs(self):
        """Umumiy to'langan so'm summa"""
        from sales.models import Debt
        return Debt.objects.filter(customer=self, currency='UZS').aggregate(total=Sum('paid_amount'))[
            'total'] or Decimal('0')

    def get_purchase_history(self):
        """Xarid tarixi - valyuta bilan"""
        from sales.models import PhoneSale, AccessorySale, PhoneExchange
        purchases = []

        # Telefon sotuvlari ($)
        for sale in self.phone_sales.select_related('phone__phone_model', 'phone__memory_size').order_by('-sale_date'):
            purchases.append({
                'type': 'phone_sale',
                'date': sale.sale_date,
                'item': f"{sale.phone.phone_model} {sale.phone.memory_size}",
                'amount': sale.sale_price,
                'currency': 'USD',
                'currency_symbol': '$',
                'object': sale
            })

        # Aksessuar sotuvlari (so'm)
        for sale in self.accessory_sales.select_related('accessory').order_by('-sale_date'):
            purchases.append({
                'type': 'accessory_sale',
                'date': sale.sale_date,
                'item': f"{sale.accessory.name} x{sale.quantity}",
                'amount': sale.total_price,
                'currency': 'UZS',
                'currency_symbol': 'so\'m',
                'object': sale
            })

        # Telefon almashtirish ($)
        for exchange in self.phone_exchanges.select_related('new_phone__phone_model', 'old_phone_model').order_by(
                '-exchange_date'):
            purchases.append({
                'type': 'phone_exchange',
                'date': exchange.exchange_date,
                'item': f"{exchange.old_phone_model} â†’ {exchange.new_phone.phone_model}",
                'amount': exchange.new_phone_price,
                'currency': 'USD',
                'currency_symbol': '$',
                'object': exchange
            })

        purchases.sort(key=lambda x: x['date'], reverse=True)
        return purchases

    def get_debt_history(self):
        """Qarz tarixi - valyuta bilan"""
        from sales.models import Debt
        return self.debts.select_related('creditor').order_by('-created_at')
